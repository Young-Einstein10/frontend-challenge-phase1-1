[{"/home/codespace/workspace/frontend-challenge-phase1-1/record-api/src/index.js":"1","/home/codespace/workspace/frontend-challenge-phase1-1/record-api/src/reportWebVitals.js":"2","/home/codespace/workspace/frontend-challenge-phase1-1/record-api/src/App.js":"3","/home/codespace/workspace/frontend-challenge-phase1-1/record-api/src/Component/Pagination.js":"4","/home/codespace/workspace/frontend-challenge-phase1-1/record-api/src/Component/Records.js":"5","/home/codespace/workspace/frontend-challenge-phase1-1/record-api/src/Component/SearchForm.js":"6","/home/codespace/workspace/frontend-challenge-phase1-1/record-api/src/Component/ViewDetailsModal.js":"7","/home/codespace/workspace/frontend-challenge-phase1-1/record-api/src/Component/Filter.js":"8"},{"size":478,"mtime":1610522282018,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1610522282018,"results":"11","hashOfConfig":"10"},{"size":5354,"mtime":1610729502941,"results":"12","hashOfConfig":"10"},{"size":610,"mtime":1610534999702,"results":"13","hashOfConfig":"10"},{"size":4018,"mtime":1610632637178,"results":"14","hashOfConfig":"10"},{"size":550,"mtime":1610728038449,"results":"15","hashOfConfig":"10"},{"size":1145,"mtime":1610632649986,"results":"16","hashOfConfig":"10"},{"size":664,"mtime":1610729403648,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"rhhfb6",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/home/codespace/workspace/frontend-challenge-phase1-1/record-api/src/index.js",[],["38","39"],"/home/codespace/workspace/frontend-challenge-phase1-1/record-api/src/reportWebVitals.js",[],"/home/codespace/workspace/frontend-challenge-phase1-1/record-api/src/App.js",["40","41"],"/home/codespace/workspace/frontend-challenge-phase1-1/record-api/src/Component/Pagination.js",[],"/home/codespace/workspace/frontend-challenge-phase1-1/record-api/src/Component/Records.js",["42","43","44","45"],"import React, { useState } from \"react\";\nimport { Table, Button, ListGroup, Collapse } from \"react-bootstrap\";\nimport ViewDetialsModal from \"./ViewDetailsModal\";\n\nconst Records = ({ records, loading }) => {\n  const [open, setOpen] = useState(false);\n  const [currentRow, setCurrentRow] = useState({});\n  const [show, setShow] = useState(false);\n\n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n\n  const toggleModal = () => setShow((show) => !show);\n\n  return (\n    <div className=\"mb-4\">\n      <div>\n        <Table responsive bordered size=\"md\" className=\"mb-4\">\n          <thead>\n            <tr>\n              <th>FirstName</th>\n              <th>LastName</th>\n              <th>Gender</th>\n              <th>Latitutde</th>\n              <th>Longitude</th>\n              <th>More Record</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {records.map((record, key) => (\n              <tr key={key}>\n                <td>{record.FirstName}</td>\n                <td>{record.LastName}</td>\n                <td>{record.Gender}</td>\n                <td>{record.Latitude}</td>\n                <td>{record.Longitude}</td>\n                <td>\n                  <Button\n                    onClick={() => {\n                      setCurrentRow(record);\n                      toggleModal();\n                    }}\n                    variant=\"info\"\n                  >\n                    View Details\n                  </Button>\n                </td>\n              </tr>\n            ))}\n\n            {show ? (\n              <ViewDetialsModal\n                show={show}\n                toggleModal={toggleModal}\n                currentRow={currentRow}\n              />\n            ) : null}\n\n            {/* <tr>\n              <Collapse in={open && (currentRow.UserName === record.UserName) ? true : false}>\n                <div>\n                  <h3 className=\"p-2\">Other Records</h3>\n                  <ListGroup>\n                    <ListGroup.Item>\n                      <b className=\"mr-1\">CreditCardNumber:</b>{\" \"}\n                      <span>{record.CreditCardNumber}</span>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <b className=\"mr-1\">CreditCardType:</b>\n                      <span>{record.CreditCardType}</span>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <b className=\"mr-1\">Email:</b>\n                      <span>{record.Email}</span>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <b className=\"mr-1\"> DomainName:</b>{\" \"}\n                      <span>{record.DomainName}</span>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <b className=\"mr-1\">PhoneNumber:</b>{\" \"}\n                      <span>{record.PhoneNumber}</span>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <b className=\"mr-1\">MacAddress:</b>{\" \"}\n                      <span>{record.MacAddress}</span>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <b className=\"mr-1\">URL:</b> <span>{record.URL}</span>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <b className=\"mr-1\">UserName:</b>\n                      <span>{record.UserName}</span>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <b className=\"mr-1\">LastLogin:</b>{\" \"}\n                      <span>{record.LastLogin}</span>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <b className=\"mr-1\">PaymentMethod:</b>{\" \"}\n                      <span>{record.PaymentMethod}</span>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </div>\n              </Collapse>\n            </tr> */}\n          </tbody>\n        </Table>\n      </div>\n    </div>\n  );\n};\n\nexport default Records;\n","/home/codespace/workspace/frontend-challenge-phase1-1/record-api/src/Component/SearchForm.js",[],"/home/codespace/workspace/frontend-challenge-phase1-1/record-api/src/Component/ViewDetailsModal.js",["46","47","48","49","50","51","52","53","54","55","56","57"],"import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst ViewDetialsModal = ({ show, toggleModal, currentRow }) => {\n  const {\n    FirstName,\n    LastName,\n    Gender,\n    Latitude,\n    Longitude,\n    CreditCardNumber,\n    CreditCardType,\n    Email,\n    DomainName,\n    PhoneNumber,\n    MacAddress,\n    URL,\n    UserName,\n    LastLogin,\n    PaymentMethod,\n  } = currentRow;\n\n  return (\n    <Modal show={show} onHide={toggleModal}>\n      <Modal.Header closeButton>\n        <Modal.Title>Patient Details</Modal.Title>\n      </Modal.Header>\n      \n      <Modal.Body>\n        <div>\n            <p>\n                <strong>First Name:</strong>\n                {FirstName}\n            </p>\n\n            <p>\n                <strong>Last Name:</strong>\n                {LastName}\n            </p>\n\n            <p>\n                <strong>User Name:</strong>\n                {UserName}\n            </p>\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={toggleModal}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ViewDetialsModal;\n","/home/codespace/workspace/frontend-challenge-phase1-1/record-api/src/Component/Filter.js",["58"],"import React from \"react\";\nimport { Col, Form } from \"react-bootstrap\";\n\nconst Filter = ({ filterValue, handleFiterChange }) => {\n  return (\n    <Form>\n    Filter By:\n      <div className=\"mb-3\">\n        <Form.Check\n          inline\n          name=\"gender\"\n          value={filterValue}\n          label=\"Gender\"\n          type=\"checkbox\"\n          onChange={handleFiterChange}\n        />\n        <Form.Check\n          inline\n          name=\"CreditCardNumber\"\n          value=\"CreditCardNumber\"\n          label=\"Credit Card Number\"\n          type=\"checkbox\"\n          onChange={handleFiterChange}\n        />\n      </div>\n    </Form>\n  );\n};\n\nexport default Filter;\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":122,"column":10,"nodeType":"65","messageId":"66","endLine":122,"endColumn":14},{"ruleId":"63","severity":1,"message":"67","line":122,"column":16,"nodeType":"65","messageId":"66","endLine":122,"endColumn":23},{"ruleId":"63","severity":1,"message":"68","line":2,"column":25,"nodeType":"65","messageId":"66","endLine":2,"endColumn":34},{"ruleId":"63","severity":1,"message":"69","line":2,"column":36,"nodeType":"65","messageId":"66","endLine":2,"endColumn":44},{"ruleId":"63","severity":1,"message":"70","line":6,"column":10,"nodeType":"65","messageId":"66","endLine":6,"endColumn":14},{"ruleId":"63","severity":1,"message":"71","line":6,"column":16,"nodeType":"65","messageId":"66","endLine":6,"endColumn":23},{"ruleId":"63","severity":1,"message":"72","line":8,"column":5,"nodeType":"65","messageId":"66","endLine":8,"endColumn":11},{"ruleId":"63","severity":1,"message":"73","line":9,"column":5,"nodeType":"65","messageId":"66","endLine":9,"endColumn":13},{"ruleId":"63","severity":1,"message":"74","line":10,"column":5,"nodeType":"65","messageId":"66","endLine":10,"endColumn":14},{"ruleId":"63","severity":1,"message":"75","line":11,"column":5,"nodeType":"65","messageId":"66","endLine":11,"endColumn":21},{"ruleId":"63","severity":1,"message":"76","line":12,"column":5,"nodeType":"65","messageId":"66","endLine":12,"endColumn":19},{"ruleId":"63","severity":1,"message":"77","line":13,"column":5,"nodeType":"65","messageId":"66","endLine":13,"endColumn":10},{"ruleId":"63","severity":1,"message":"78","line":14,"column":5,"nodeType":"65","messageId":"66","endLine":14,"endColumn":15},{"ruleId":"63","severity":1,"message":"79","line":15,"column":5,"nodeType":"65","messageId":"66","endLine":15,"endColumn":16},{"ruleId":"63","severity":1,"message":"80","line":16,"column":5,"nodeType":"65","messageId":"66","endLine":16,"endColumn":15},{"ruleId":"63","severity":1,"message":"81","line":17,"column":5,"nodeType":"65","messageId":"66","endLine":17,"endColumn":8},{"ruleId":"63","severity":1,"message":"82","line":19,"column":5,"nodeType":"65","messageId":"66","endLine":19,"endColumn":14},{"ruleId":"63","severity":1,"message":"83","line":20,"column":5,"nodeType":"65","messageId":"66","endLine":20,"endColumn":18},{"ruleId":"63","severity":1,"message":"84","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":13},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'setData' is assigned a value but never used.","'ListGroup' is defined but never used.","'Collapse' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'Gender' is assigned a value but never used.","'Latitude' is assigned a value but never used.","'Longitude' is assigned a value but never used.","'CreditCardNumber' is assigned a value but never used.","'CreditCardType' is assigned a value but never used.","'Email' is assigned a value but never used.","'DomainName' is assigned a value but never used.","'PhoneNumber' is assigned a value but never used.","'MacAddress' is assigned a value but never used.","'URL' is assigned a value but never used.","'LastLogin' is assigned a value but never used.","'PaymentMethod' is assigned a value but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]